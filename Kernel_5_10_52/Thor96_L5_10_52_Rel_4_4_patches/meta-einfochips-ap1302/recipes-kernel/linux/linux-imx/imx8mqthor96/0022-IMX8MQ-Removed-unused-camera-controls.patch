From ce2181b1395dbce2909b01eee8d932794a425e5a Mon Sep 17 00:00:00 2001
From: Deepak Rathore <deepak.rathore@einfochips.com>
Date: Wed, 9 Mar 2022 12:25:46 +0530
Subject: [PATCH 07/10] IMX8MQ: Removed unused camera controls

- Removed unused camera v4l2 controls which is not
  in scope to control

Change-Id: Ie079c54eb5229387d8de2da11211d1f8ff6c5856
Signed-off-by: Deepak Rathore <deepak.rathore@einfochips.com>
---
 drivers/media/i2c/ap1302.c | 138 +------------------------------------
 1 file changed, 2 insertions(+), 136 deletions(-)

diff --git a/drivers/media/i2c/ap1302.c b/drivers/media/i2c/ap1302.c
index e525714e3..ba2e680fe 100644
--- a/drivers/media/i2c/ap1302.c
+++ b/drivers/media/i2c/ap1302.c
@@ -1235,6 +1235,7 @@ static void ap1302_power_off(struct ap1302_device *ap1302)
 	}
 }
 
+
 /* -----------------------------------------------------------------------------
  * Hardware Configuration
  */
@@ -1369,14 +1370,6 @@ static int ap1302_set_mipi_t3_clk(struct ap1302_device *ap1302)
 static u16 ap1302_wb_values[] = {
 	AP1302_AWB_CTRL_MODE_OFF,	/* V4L2_WHITE_BALANCE_MANUAL */
 	AP1302_AWB_CTRL_MODE_AUTO,	/* V4L2_WHITE_BALANCE_AUTO */
-	AP1302_AWB_CTRL_MODE_A,		/* V4L2_WHITE_BALANCE_INCANDESCENT */
-	AP1302_AWB_CTRL_MODE_D50,	/* V4L2_WHITE_BALANCE_FLUORESCENT */
-	AP1302_AWB_CTRL_MODE_D65,	/* V4L2_WHITE_BALANCE_FLUORESCENT_H */
-	AP1302_AWB_CTRL_MODE_HORIZON,	/* V4L2_WHITE_BALANCE_HORIZON */
-	AP1302_AWB_CTRL_MODE_D65,	/* V4L2_WHITE_BALANCE_DAYLIGHT */
-	AP1302_AWB_CTRL_MODE_AUTO,	/* V4L2_WHITE_BALANCE_FLASH */
-	AP1302_AWB_CTRL_MODE_D75,	/* V4L2_WHITE_BALANCE_CLOUDY */
-	AP1302_AWB_CTRL_MODE_D75,	/* V4L2_WHITE_BALANCE_SHADE */
 };
 
 static int ap1302_set_wb_mode(struct ap1302_device *ap1302, s32 mode)
@@ -1391,11 +1384,6 @@ static int ap1302_set_wb_mode(struct ap1302_device *ap1302, s32 mode)
 	val &= ~AP1302_AWB_CTRL_MODE_MASK;
 	val |= ap1302_wb_values[mode];
 
-	if (mode == V4L2_WHITE_BALANCE_FLASH)
-		val |= AP1302_AWB_CTRL_FLASH;
-	else
-		val &= ~AP1302_AWB_CTRL_FLASH;
-
 	return ap1302_write(ap1302, AP1302_AWB_CTRL, val, NULL);
 }
 
@@ -1414,11 +1402,6 @@ static int ap1302_set_exposure(struct ap1302_device *ap1302, s32 mode)
 	return ap1302_write(ap1302, AP1302_AE_CTRL, val, NULL);
 }
 
-static int ap1302_set_exp_met(struct ap1302_device *ap1302, s32 val)
-{
-	return ap1302_write(ap1302, AP1302_AE_MET, val, NULL);
-}
-
 static int ap1302_set_gain(struct ap1302_device *ap1302, s32 val)
 {
 	return ap1302_write(ap1302, AP1302_AE_MANUAL_GAIN, val, NULL);
@@ -1444,72 +1427,6 @@ static int ap1302_set_gamma(struct ap1302_device *ap1302, s32 val)
 	return ap1302_write(ap1302, AP1302_GAMMA, val, NULL);
 }
 
-static int ap1302_set_zoom(struct ap1302_device *ap1302, s32 val)
-{
-	return ap1302_write(ap1302, AP1302_DZ_TGT_FCT, val, NULL);
-}
-
-static u16 ap1302_sfx_values[] = {
-	AP1302_SFX_MODE_SFX_NORMAL,	/* V4L2_COLORFX_NONE */
-	AP1302_SFX_MODE_SFX_BW,		/* V4L2_COLORFX_BW */
-	AP1302_SFX_MODE_SFX_SEPIA1,	/* V4L2_COLORFX_SEPIA */
-	AP1302_SFX_MODE_SFX_NEGATIVE,	/* V4L2_COLORFX_NEGATIVE */
-	AP1302_SFX_MODE_SFX_EMBOSS,	/* V4L2_COLORFX_EMBOSS */
-	AP1302_SFX_MODE_SFX_SKETCH,	/* V4L2_COLORFX_SKETCH */
-	AP1302_SFX_MODE_SFX_BLUISH,	/* V4L2_COLORFX_SKY_BLUE */
-	AP1302_SFX_MODE_SFX_GREENISH,	/* V4L2_COLORFX_GRASS_GREEN */
-	AP1302_SFX_MODE_SFX_REDISH,	/* V4L2_COLORFX_SKIN_WHITEN */
-	AP1302_SFX_MODE_SFX_NORMAL,	/* V4L2_COLORFX_VIVID */
-	AP1302_SFX_MODE_SFX_NORMAL,	/* V4L2_COLORFX_AQUA */
-	AP1302_SFX_MODE_SFX_NORMAL,	/* V4L2_COLORFX_ART_FREEZE */
-	AP1302_SFX_MODE_SFX_NORMAL,	/* V4L2_COLORFX_SILHOUETTE */
-	AP1302_SFX_MODE_SFX_SOLARIZE, /* V4L2_COLORFX_SOLARIZATION */
-	AP1302_SFX_MODE_SFX_ANTIQUE, /* V4L2_COLORFX_ANTIQUE */
-	AP1302_SFX_MODE_SFX_NORMAL,	/* V4L2_COLORFX_SET_CBCR */
-};
-
-static int ap1302_set_special_effect(struct ap1302_device *ap1302, s32 val)
-{
-	return ap1302_write(ap1302, AP1302_SFX_MODE, ap1302_sfx_values[val],
-			    NULL);
-}
-
-static u16 ap1302_scene_mode_values[] = {
-	AP1302_SCENE_CTRL_MODE_NORMAL,		/* V4L2_SCENE_MODE_NONE */
-	AP1302_SCENE_CTRL_MODE_BACKLIGHT,	/* V4L2_SCENE_MODE_BACKLIGHT */
-	AP1302_SCENE_CTRL_MODE_BEACH,		/* V4L2_SCENE_MODE_BEACH_SNOW */
-	AP1302_SCENE_CTRL_MODE_TWILIGHT,	/* V4L2_SCENE_MODE_CANDLE_LIGHT */
-	AP1302_SCENE_CTRL_MODE_NORMAL,		/* V4L2_SCENE_MODE_DAWN_DUSK */
-	AP1302_SCENE_CTRL_MODE_NORMAL,		/* V4L2_SCENE_MODE_FALL_COLORS */
-	AP1302_SCENE_CTRL_MODE_FIREWORKS,	/* V4L2_SCENE_MODE_FIREWORKS */
-	AP1302_SCENE_CTRL_MODE_LANDSCAPE,	/* V4L2_SCENE_MODE_LANDSCAPE */
-	AP1302_SCENE_CTRL_MODE_NIGHT,		/* V4L2_SCENE_MODE_NIGHT */
-	AP1302_SCENE_CTRL_MODE_PARTY,		/* V4L2_SCENE_MODE_PARTY_INDOOR */
-	AP1302_SCENE_CTRL_MODE_PORTRAIT,	/* V4L2_SCENE_MODE_PORTRAIT */
-	AP1302_SCENE_CTRL_MODE_SPORT,		/* V4L2_SCENE_MODE_SPORTS */
-	AP1302_SCENE_CTRL_MODE_SUNSET,		/* V4L2_SCENE_MODE_SUNSET */
-	AP1302_SCENE_CTRL_MODE_DOCUMENT,	/* V4L2_SCENE_MODE_TEXT */
-};
-
-static int ap1302_set_scene_mode(struct ap1302_device *ap1302, s32 val)
-{
-	return ap1302_write(ap1302, AP1302_SCENE_CTRL,
-			    ap1302_scene_mode_values[val], NULL);
-}
-
-static const u16 ap1302_flicker_values[] = {
-	AP1302_FLICK_CTRL_MODE_DISABLED,
-	AP1302_FLICK_CTRL_FREQ(50) | AP1302_FLICK_CTRL_MODE_MANUAL,
-	AP1302_FLICK_CTRL_FREQ(60) | AP1302_FLICK_CTRL_MODE_MANUAL,
-	AP1302_FLICK_CTRL_MODE_AUTO,
-};
-
-static int ap1302_set_flicker_freq(struct ap1302_device *ap1302, s32 val)
-{
-	return ap1302_write(ap1302, AP1302_FLICK_CTRL,
-			    ap1302_flicker_values[val], NULL);
-}
-
 static int ap1302_s_ctrl(struct v4l2_ctrl *ctrl)
 {
 	struct ap1302_device *ap1302 =
@@ -1522,9 +1439,6 @@ static int ap1302_s_ctrl(struct v4l2_ctrl *ctrl)
 	case V4L2_CID_EXPOSURE:
 		return ap1302_set_exposure(ap1302, ctrl->val);
 
-	case V4L2_CID_EXPOSURE_METERING:
-		return ap1302_set_exp_met(ap1302, ctrl->val);
-
 	case V4L2_CID_GAIN:
 		return ap1302_set_gain(ap1302, ctrl->val);
 
@@ -1540,18 +1454,6 @@ static int ap1302_s_ctrl(struct v4l2_ctrl *ctrl)
 	case V4L2_CID_SATURATION:
 		return ap1302_set_saturation(ap1302, ctrl->val);
 
-	case V4L2_CID_ZOOM_ABSOLUTE:
-		return ap1302_set_zoom(ap1302, ctrl->val);
-
-	case V4L2_CID_COLORFX:
-		return ap1302_set_special_effect(ap1302, ctrl->val);
-
-	case V4L2_CID_SCENE_MODE:
-		return ap1302_set_scene_mode(ap1302, ctrl->val);
-
-	case V4L2_CID_POWER_LINE_FREQUENCY:
-		return ap1302_set_flicker_freq(ap1302, ctrl->val);
-
 	default:
 		return -EINVAL;
 	}
@@ -1566,7 +1468,7 @@ static const struct v4l2_ctrl_config ap1302_ctrls[] = {
 		.ops = &ap1302_ctrl_ops,
 		.id = V4L2_CID_AUTO_N_PRESET_WHITE_BALANCE,
 		.min = 0,
-		.max = 9,
+		.max = 1,
 		.def = 1,
 	}, {
 		.ops = &ap1302_ctrl_ops,
@@ -1613,15 +1515,6 @@ static const struct v4l2_ctrl_config ap1302_ctrls[] = {
 		.max = 0xC,
 		.step = 1,
 		.def = 0xC,
-	}, {
-		.ops = &ap1302_ctrl_ops,
-		.id = V4L2_CID_EXPOSURE_METERING,
-		.name = "Exposure Metering",
-		.type = V4L2_CTRL_TYPE_INTEGER,
-		.min = 0x0,
-		.max = 0x3,
-		.step = 1,
-		.def = 0x1,
 	}, {
 		.ops = &ap1302_ctrl_ops,
 		.id = V4L2_CID_GAIN,
@@ -1631,33 +1524,6 @@ static const struct v4l2_ctrl_config ap1302_ctrls[] = {
 		.max = 0xFFFF,
 		.step = 0x100,
 		.def = 0x100,
-	}, {
-		.ops = &ap1302_ctrl_ops,
-		.id = V4L2_CID_ZOOM_ABSOLUTE,
-		.min = 0x0100,
-		.max = 0x1000,
-		.step = 1,
-		.def = 0x0100,
-	}, {
-		.ops = &ap1302_ctrl_ops,
-		.id = V4L2_CID_COLORFX,
-		.min = 0,
-		.max = 15,
-		.def = 0,
-		.menu_skip_mask = BIT(15) | BIT(12) | BIT(11) | BIT(10) | BIT(9),
-	}, {
-		.ops = &ap1302_ctrl_ops,
-		.id = V4L2_CID_SCENE_MODE,
-		.min = 0,
-		.max = 13,
-		.def = 0,
-		.menu_skip_mask = BIT(5) | BIT(4),
-	}, {
-		.ops = &ap1302_ctrl_ops,
-		.id = V4L2_CID_POWER_LINE_FREQUENCY,
-		.min = 0,
-		.max = 3,
-		.def = 3,
 	},
 };
 
-- 
2.17.1

