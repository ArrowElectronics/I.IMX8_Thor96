From d563df4fa2f06ad8f77ae1d296070b4d1e2694a5 Mon Sep 17 00:00:00 2001
From: Deepak Rathore <deepak.rathore@einfochips.com>
Date: Wed, 16 Mar 2022 18:56:49 +0530
Subject: [PATCH 1/2] IMX8M: Added support for AR1335 camera sensor

- AR1335 camera sensor support is added
- IPIPE Frequency and phy clock also changed for streaming stability
- return type is handled in ap1302 register write to avoid warning
  during write using sysfs interface

Change-Id: I4f3663c7be1e49e34cf5fab40ea2bc6ddcea2400
Signed-off-by: Deepak Rathore <deepak.rathore@einfochips.com>
---
 arch/arm64/boot/dts/freescale/Makefile        |  3 +-
 .../freescale/imx8mq-thor96-ap1302-ar1335.dts | 67 +++++++++++++++++++
 arch/arm64/boot/dts/freescale/imx8mq.dtsi     |  2 +-
 drivers/media/i2c/ap1302.c                    | 10 ++-
 .../media/platform/mxc/capture/mx6s_capture.c |  2 +-
 5 files changed, 78 insertions(+), 6 deletions(-)
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mq-thor96-ap1302-ar1335.dts

diff --git a/arch/arm64/boot/dts/freescale/Makefile b/arch/arm64/boot/dts/freescale/Makefile
index a272662a1..92d5cf431 100644
--- a/arch/arm64/boot/dts/freescale/Makefile
+++ b/arch/arm64/boot/dts/freescale/Makefile
@@ -123,7 +123,8 @@ dtb-$(CONFIG_ARCH_MXC) += imx8mq-nitrogen.dtb
 dtb-$(CONFIG_ARCH_MXC) += imx8mq-phanbell.dtb
 dtb-$(CONFIG_ARCH_MXC) += imx8mq-pico-pi.dtb
 dtb-$(CONFIG_ARCH_MXC) += imx8mq-thor96.dtb imx8mq-thor96-dual-display.dtb imx8mq-thor96-dcss-rm67191.dtb \
-			  imx8mq-thor96-lcdif-adv7535.dtb imx8mq-thor96-ap1302-ar0430.dtb imx8mq-thor96-ap1302-arx3a0.dtb
+			  imx8mq-thor96-lcdif-adv7535.dtb imx8mq-thor96-ap1302-ar0430.dtb imx8mq-thor96-ap1302-arx3a0.dtb \
+			  imx8mq-thor96-ap1302-ar1335.dtb
 dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk-dp.dtb
 dtb-$(CONFIG_ARCH_MXC) += imx8mq-zii-ultra-rmb3.dtb
 dtb-$(CONFIG_ARCH_MXC) += imx8mq-zii-ultra-zest.dtb
diff --git a/arch/arm64/boot/dts/freescale/imx8mq-thor96-ap1302-ar1335.dts b/arch/arm64/boot/dts/freescale/imx8mq-thor96-ap1302-ar1335.dts
new file mode 100644
index 000000000..5a5dc0297
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mq-thor96-ap1302-ar1335.dts
@@ -0,0 +1,67 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright 2019 NXP.
+ */
+
+#include "imx8mq-thor96.dts"
+
+&ov5640_mipi2 {
+	status = "disabled";
+};
+
+&ov5640_mipi {
+	status = "disabled";
+};
+
+&i2c3 {
+	ap1302_mipi: ap1302@3d {
+		compatible = "onnn,ap1302";
+		reg = <0x3d>;
+
+		pinctrl-0 = <&pinctrl_csi>;
+		clocks = <&clk IMX8MQ_CLK_CLKO2>;
+		clock-names = "xclk";
+		assigned-clocks = <&clk IMX8MQ_CLK_CLKO2>,
+				  <&clk IMX8MQ_CLK_CLKO2>;
+		assigned-clock-parents = <&clk IMX8MQ_SYS2_PLL_200M>;
+		assigned-clock-rates = <0>, <20000000>;
+
+		reset-gpios = <&gpio3 24 GPIO_ACTIVE_LOW>;
+		standby-gpios = <&gpio2 7 GPIO_ACTIVE_HIGH>;
+		i2csel-gpios = <&gpio2 8 GPIO_ACTIVE_HIGH>;
+		isptrig-gpios = <&gpio3 12 GPIO_ACTIVE_HIGH>;
+		status = "okay";
+
+		port {
+			ap1302_ep: endpoint {
+				remote-endpoint = <&mipi1_sensor_ep>;
+				data-lanes = <1 2 3 4>;
+			};
+		};
+
+		sensors {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			onnn,model = "onnn,ar1335";
+			sensor@0 {
+				reg = <0>;
+			};
+		};
+	};
+};
+
+&mipi1_sensor_ep {
+	remote-endpoint = <&ap1302_ep>;
+	data-lanes = <1 2 3 4>;
+	csis-wclk;
+};
+
+&iomuxc {
+	pinctrl_csi: csi_grp {
+		fsl,pins = <
+			MX8MQ_IOMUXC_SD1_DATA5_GPIO2_IO7	0x19
+			MX8MQ_IOMUXC_SAI5_RXD3_GPIO3_IO24	0x19
+			MX8MQ_IOMUXC_GPIO1_IO15_CCMSRCGPCMIX_CLKO2      0x59
+		>;
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mq.dtsi b/arch/arm64/boot/dts/freescale/imx8mq.dtsi
index a434ed697..8c452e508 100755
--- a/arch/arm64/boot/dts/freescale/imx8mq.dtsi
+++ b/arch/arm64/boot/dts/freescale/imx8mq.dtsi
@@ -1139,7 +1139,7 @@
 				assigned-clocks = <&clk IMX8MQ_CLK_CSI1_CORE>,
 						  <&clk IMX8MQ_CLK_CSI1_PHY_REF>,
 						  <&clk IMX8MQ_CLK_CSI1_ESC>;
-				assigned-clock-rates = <266000000>, <333000000>, <66000000>;
+				assigned-clock-rates = <266000000>, <250000000>, <66000000>;
 				power-domains = <&pgc_mipi_csi1>;
 				csis-phy-reset = <&src 0x4c 7>;
 				phy-gpr = <&iomuxc_gpr 0x88>;
diff --git a/drivers/media/i2c/ap1302.c b/drivers/media/i2c/ap1302.c
index 8b0bddce1..ee8955bb2 100644
--- a/drivers/media/i2c/ap1302.c
+++ b/drivers/media/i2c/ap1302.c
@@ -546,7 +546,8 @@ static const struct ap1302_sensor_info ap1302_sensor_info[] = {
 		.name = "ar1335",
 		.i2c_addr = 0x36,
 		.resolution = { 4208, 3120 },
-		.format = MEDIA_BUS_FMT_SGRBG10_1X10,
+		.fps = 10,
+		.format = MEDIA_BUS_FMT_UYVY8_2X8,
 		.supplies = (const struct ap1302_sensor_supply[]) {
 			{ "vaa", 0 },
 			{ "vddio", 0 },
@@ -962,14 +963,13 @@ static int ap1302_reg_data_set(void *arg, u64 val)
 	int ret;
 
 	mutex_lock(&ap1302->debugfs.lock);
-
 	addr = ap1302->debugfs.reg_addr;
 	if (!addr) {
 		ret = -EINVAL;
 		goto unlock;
 	}
 
-	ap1302_write(ap1302, addr, val, NULL);
+	ret = ap1302_write(ap1302, addr, val, NULL);
 
 unlock:
 	mutex_unlock(&ap1302->debugfs.lock);
@@ -2389,6 +2389,10 @@ static int ap1302_load_firmware(struct ap1302_device *ap1302)
 		ap1302_write(ap1302, AP1302_PREVIEW_DIV_HINF_MIPI, 0x00030002, NULL);
 	}
 
+	/* PIPE_DIV = 5
+	 * PIPE FREQ = 112 MHZ (564 from PLL0 /5) */
+	ap1302_write(ap1302, AP1302_PREVIEW_DIV_IPIPE, 0x00010008, NULL);
+
 	/* Check again if PLL is locked aftaer adjusting Host interface MIPI data rate of AP1302 */
 	for (cnt = 0 ; !ret && (cnt < 10) ; cnt++) {
 		msleep(2);
diff --git a/drivers/media/platform/mxc/capture/mx6s_capture.c b/drivers/media/platform/mxc/capture/mx6s_capture.c
index 165e8b083..798689adb 100644
--- a/drivers/media/platform/mxc/capture/mx6s_capture.c
+++ b/drivers/media/platform/mxc/capture/mx6s_capture.c
@@ -50,7 +50,7 @@
 #define MX6S_CAM_VERSION "0.0.1"
 #define MX6S_CAM_DRIVER_DESCRIPTION "i.MX6S_CSI"
 
-#define MAX_VIDEO_MEM 64
+#define MAX_VIDEO_MEM 128
 
 /* reset values */
 #define CSICR1_RESET_VAL	0x40000800
-- 
2.17.1

